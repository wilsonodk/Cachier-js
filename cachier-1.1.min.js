var Cachier = (function(Json) { var module = {}, win = this, ls = win.localStorage, dataCid = "cachier:data:{cid}", typeCid = "cachier:type:{cid}", expireCid = "cachier:expire:{cid}", cidRegEx = /\{cid\}/, defaultTime = 60 * 60 * 1000, serialize = Json.stringify, unserialize = Json.parse; function prepareCids(cid) { return { data: dataCid.replace(cidRegEx, cid), type: typeCid.replace(cidRegEx, cid), expire: expireCid.replace(cidRegEx, cid) }; } module.get = function(cacheId) { var cid = prepareCids(cacheId), now = (new Date()).getTime(), expireDate = parseInt(ls.getItem(cid.expire)), myData = { result: false, data: "", error: null }; if (now < expireDate) { var dataType = ls.getItem(cid.type), data = ls.getItem(cid.data); switch (dataType) { case "object": myData.data = unserialize(data); myData.result = true; break; case "number": myData.data = Number(data); myData.result = true; break; case "boolean": myData.data = data == "true" ? true : false; myData.result = true; break; case "string": myData.data = data; myData.result = true; break; case "function": myData.data = ""; myData.result = false; myData.error = "Function was saved, unable to retrieve the value"; break; default: myData.data = ""; myData.result = false; myData.error = "Unknown data type was saved"; break; } } else { Cachier.delete(cacheId); myData.error = "Expired"; return myData; } return myData; }; module.set = function(cacheId, data, expire) { var expireTime = expire || defaultTime; var dataType = typeof data; if (typeof cacheId != "string") return false; switch (dataType) { case "function": return false; break; case "object": data = serialize(data); break; case "string": break; case "number": case "boolean": default: data = data.toString(); break; } if (typeof data == "string") { var cid = prepareCids(cacheId); expireTime = (parseInt(expireTime) + (new Date).getTime()).toString(); try { ls.setItem(cid.data, data); ls.setItem(cid.type, dataType); ls.setItem(cid.expire, expireTime); } catch (error) { return false; } } else { return false; } return true; }; module.delete = function(cacheId) { try { var cid = prepareCids(cacheId); ls.removeItem(cid.data); ls.removeItem(cid.type); ls.removeItem(cid.expire); } catch (error) { return false; } return true; }; return module; }(JSON));